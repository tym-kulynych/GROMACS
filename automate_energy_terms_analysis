#!/bin/bash
source /usr/local/gromacs/bin/GMXRC
for name in UNK_atp_pull UNK_gtp_pull; do

    #generating index file
    echo "!! generating ndx file !!"
    read -p "Please type the number of a/a residues -->" resnum
    i=0 
    start=7 #the residue to start from (our protein starts from the 7th a/a residue

    #making a list of residues to give GROMACS and thus avoid losses of time on the interactivity
    count ()
    {
    for i in $(seq $start $resnum); do
         echo "r $i" 
         done
    echo " "
    echo "q"
    }
    count|gmx make_ndx -f ./$name/nvt.gro -o ./$name/script_aares.ndx
    echo "!! generating ndx file = DONE !!"

    read -p "Please type the number of energy groups you already have in your *.mdp, excluding Protein -->" alrgrps
    read -p "Please type them now, separating with single spaces -->" string

    let 'numgrps=62-alrgrps'
    let 'num=(resnum - resnum%numgrps)/numgrps'

    #now generating trajectory parameter binary files
    echo "!! generating tpr files !!"
    for ((i=1;i<=num;i++)); do
	#generating energygrps line in the *.mdp file
	cp ./md.mdp ./$name/md.mdp
	let 'k=(i-1)*numgrps'
	let 'm=(i)*numgrps-1'
	echo -n "energygrps          = $string " >> ./$name/md.mdp
	for ((j=k;j<=m;j++)); do
		#avoiding "holes" in our protein sequence
		if [[( ${j} -lt 7) || ( ${j} -ge 157 && ${j} -le 165)]]
		then 
		    continue
		fi		
		echo -n "r_$j " >> ./$name/md.mdp
		echo -n "r_$j " >> control.txt
		done
	
         #got our md.mdp, invoking gmx grompp
         echo "_________ $i num $num__________" >> control.txt
         gmx grompp -f ./$name/md.mdp -n ./${name}/script_aares.ndx -c ./${name}/nvt -p ./${name}/topol_${name}.top -o ./${name}/md_${name}_${i}.tpr
         gmx mdrun -v -rerun /home/tim/recalc/pull3NNY_${name}_new.xtc -s ./${name}/md_${name}_${i}.tpr -o ${i}.trr -g ${i}.log -cpi ${i}.cpt -c ${i} -e ./${name}/ener_${i}.edr -nt 4
         #removing done md.mdp
         rm -r ./$name/md.mdp
     done

     #generating one more tpr for the MOD (the rest of amino acids in the protein)
     cp ./md.mdp ./$name/md.mdp
     j=0 
     echo -n "energygrps          = $string " >> ./$name/md.mdp
     for ((j=num*$numgrps;j<=resnum;j++))
	     do
	          echo -n "r_$j " >> ./$name/md.mdp
	          echo -n "r_$j " >> control.txt
	     done
     gmx grompp -f ./${name}/md.mdp -n ./${name}/script_aares.ndx -c ./${name}/nvt -p ./${name}/topol_${name}.top -o ./$name/md_${name}_last.tpr
     gmx mdrun -v -rerun /home/tim/recalc/pull3NNY_${name}_new.xtc -s ./$name/md_${name}_last.tpr -o ${i}.trr -g ${i}.log -cpi ${i}.cpt -c ${i} -e ./${name}/ener_${i}.edr -nt 4
     rm -r ./$name/md.mdp
     echo "!! generating tpr files = DONE!!"

     echo "Now it is time to analyse your terms!"
     path=${name}

     let 'numgrps=62-alrgrps'
     let 'num=(resnum - resnum%numgrps)/numgrps'

     for ((i=1;i<=num;i++)); do
          tpr_n=md_${name}_${i}
          echo "I shall now let you see the numbers of terms, invoking gmx energy for you; when you know your terms, please go out of it"

          gmx energy -f ./${path}/ener_${i}.edr -s ./${path}/${tpr_n}.tpr -o ./$path/script_check_control.xvg -sum -fee

          read -p "Please type your first energy group for the analysis --->" x
          read -p "Please type your ending number of group in the options list --->" y

          while [[ x -lt y ]]; do
                let 'x1=x+1'; let 'x2=x+2'; let 'x3=x+3';
                echo "$x ${x1} ${x2} ${x3} 0" |gmx energy -f ./${path}/ener_${i}.edr -s ./$path/${tpr_n}.tpr -o ./$path/script_check_control.xvg -sum -fee > out.txt
                rm -r ./$path/script_check_control.xvg
                grep -A 5 "Coul" out.txt >> out_res.txt
                let 'x=x+4'
          done 

      done

      #analysing the last tpr (the rest of amino acids in the protein)
      tpr_n=md_${name}_last

      echo "I shall now let you see the numbers of terms, invoking gmx energy for you; when you know your terms, please go out of it"

      gmx energy -f ./${path}/ener_${i}.edr -s ./${path}/${tpr_n}.tpr -o ./${path}/script_check_control.xvg -sum -fee

      read -p "Please type your first energy group for the analysis" x
      read -p "Please type your ending number of group in the options list" y

      while [[ x -lt y ]]; do
          let 'x1=x+1'; let 'x2=x+2'; let 'x3=x+3';
          echo "$x ${x1} ${x2} ${x3} 0" |gmx energy -f ./${path}/ener_${i}.edr -s ./${path}/${tpr_n}.tpr -o ./${path}/script_check_control.xvg -sum -fee > out.txt
          rm -r ./${path}/script_check_control.xvg
          grep -A 5 "Coul" out.txt >> out_res.txt
          let 'x=x+4'
      done 

      echo "Thank you! Your results are in out_res.txt (Home Dir)"
done
